"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var classHelpers_1 = require("../../utilities/classHelpers");
function useRandomUserImageSrc(sampleUserSeed) {
    var _a = React.useState(undefined), src = _a[0], setSrc = _a[1];
    React.useMemo(function () {
        var url = "https://randomuser.me/api?exc=login,name,location,email,registered,dob,phone,cell,id,nat" + (sampleUserSeed ? "&seed=" + sampleUserSeed : "");
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {
                var response = JSON.parse(xmlHttp.responseText);
                var pictureUrl = response.results[0].picture.large;
                setSrc(pictureUrl);
            }
        };
        xmlHttp.open("GET", url, true);
        xmlHttp.send(null);
        return;
    }, [sampleUserSeed]);
    return src;
}
exports.useRandomUserImageSrc = useRandomUserImageSrc;
function useDummyImageSrc(width, height) {
    return "http://dummyimage.com/" + height + "x" + width + "/4f5c69/ffffff.png";
}
exports.useDummyImageSrc = useDummyImageSrc;
function Image(props) {
    var className = props.className, rounded = props.rounded, src = props.src, webpSrc = props.webpSrc, attrs = tslib_1.__rest(props, ["className", "rounded", "src", "webpSrc"]);
    var classes = classHelpers_1.ClassHelpers.classNames(className, { rounded: rounded });
    return (React.createElement("picture", null,
        webpSrc && React.createElement("source", { srcSet: webpSrc, type: "image/webp" }),
        React.createElement("img", tslib_1.__assign({}, attrs, { className: classes, src: src }))));
}
exports.Image = Image;
